// <auto-generated />
using System;
using LaBarber.Infra.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LaBarber.Infra.Migrations
{
    [DbContext(typeof(ContextBase))]
    partial class ContextBaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LaBarber.Domain.Entities.Company.CompanyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LatPayment")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastPayment");

                    b.Property<DateTime>("NextPayment")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("NextPayment");

                    b.Property<int>("SigningPlanId")
                        .HasColumnType("integer")
                        .HasColumnName("SigningPlanId");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("LaBarber.Domain.Entities.Customer.CustomerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<DateTime?>("LastPayment")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastPayment");

                    b.Property<bool>("MonthlyPayer")
                        .HasColumnType("boolean")
                        .HasColumnName("MonthlyPayer");

                    b.Property<int?>("MonthlyPlanId")
                        .HasColumnType("integer")
                        .HasColumnName("MonthlyPlanId");

                    b.Property<decimal?>("MonthlyValue")
                        .HasColumnType("numeric")
                        .HasColumnName("MonthlyValue");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("NextPayment")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("NextPayment");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Password");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("LaBarber.Domain.Entities.MonthlyPlan.MonthlyPlanEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.ToTable("MonthlyPlan");
                });

            modelBuilder.Entity("LaBarber.Domain.Entities.Profile.ProfileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("LaBarber.Domain.Entities.SigningPlan.SigningPlanEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BarberLimit")
                        .HasColumnType("integer")
                        .HasColumnName("BarberLimit");

                    b.Property<int>("BarberUnitLimit")
                        .HasColumnType("integer")
                        .HasColumnName("BarberUnitLimit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<int>("PaymentType")
                        .HasColumnType("integer")
                        .HasColumnName("PaymentType");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.ToTable("SigningPlan");
                });
#pragma warning restore 612, 618
        }
    }
}
